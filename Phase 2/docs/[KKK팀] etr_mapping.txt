<ER-Diagram 수정사항>
JOURNAL entity
: 조사 결과, ISBN이나 ISSN이 없는 저널이 존재하고 여러 ISBN을 가지는 저널도 있어 key로 기능하기에는 어렵다고 판단하였다. 따라서, ISBN 속성을 없애고 JOURNAL 개체를 식별하기 위해 J_NUMBER 속성을 key로 새로 추가하였다. J_NUMBER는 각 JOURNAL 개체를 구분하기 위해 부여한 surrogate key로 임의로 값을 부여한다. 또한, 저널 이름인 Name 속성을 Name, Vol, Isuue로 이루어진 composite 속성인 BookTitle으로 바꾸었다. 논문 유형을 의미하는 Sort 속성과 Nation 속성을 없앴다.
AUTHOR entity
: Group 속성은 Institution과 Department로 이루어진 composite 속성이었으나 하나의 Insititution 속성으로 바꾸었다. 또한, 이전 다이어그램에서 Major 속성을 단순히 AUTHOR의 속성으로 하여 FILED 개체와 별개의 것으로 정하였는데, 이를 FIELD 개체와의 Major 관계로 바꾸었다. 저자가 여러 전공을 가질 수 있고, 전공도 여러 전공자를 가지므로 다대다 관계로 정의하였다. 저자가 쓴 논문의 수인 Written 을 stored attribute로 수정하였다.
PAPER entity
: Author 속성은 AUTHOR entity와의 관계인 WRITE에 나타났으므로 없앴다. 또한, Title 속성은 Origin과 English로 이루어진 composite 속성이었으나 DB에 insert 할 논문을 영어 논문으로 제한하여 하나의 Title 속성으로 바꾸었다. 피인용횟수를 의미하는 Uses를 stored attribute로 수정하였다.
POST entity
: Date 속성과 Time 속성을 합쳐 Date_time 속성으로 정하였다. Type 속성의 이름을 Category로 바꾸었다.
WRITE_C relationship:
: 이 관계는 weak entity인 COMMENT와 storng entity인 ACCOUNT 사이의 관계이므로 Identifying relationship으로 수정하였다.
PUBLISH 관계에서 JOURNAL 개체, HAS 관계에서 KEYWORD 개체, WRITE 관계에서 AUTHOR 개체를 total paricipation에서 partial participation으로 바꿨다.
그 밖에 POST entity의 NO을 P_NO로, COMMENT entity의 NO을 C_NO로 속성명을 수정하였다.

<ER-Schema -> Logical Schema>
ER-Schema를 Logical Schema로 변환한 결과 총 15개의 relation이 생성되었다. 이 중 PAPER, AUTHOR, JOURNAL, FIELD, KEYWORD, ACCOUNT, POST, COMMENT 릴레이션은 entity를 변환한 것이다. 나머지는 관계 릴레이션으로 REFERENCE, WRITE, MAJOR, HAS, K_BOOKMARK, P_BOOKMARK, A_BOOKMARK 이다.
 아래 설명에서 ER Schema의 속성과 Logical Schema의 속성을 구분하기 위해 Logical Schema의 '속성'은 '컬럼'으로 표시하였다.

1. PAPER entity -> PAPER relation
 논문 개체는 strong entity이므로 논문 릴레이션으로 변환되었다. 논문 개체가 가진 속성은 Title, Summary, Url, DOI, Uses 이다. 이 중 Uses는 피인용횟수로 논문 간 인용관계인 REFERENCE 테이블에서 계산할 수 있으므로 logical schema의 컬럼에 Uses 속성은 제외하였다. 그 외 속성은 PUBLISH 관계를 위해 논문 릴레이션의 컬럼으로 넣었다. 이때 Uses는 실제 해당 논문의 피인용횟수를 이용하지 않고 구축한 DB 내 존재하는 논문들로부터 얻는 것으로 제한하였다.
 Title, Url 속성은 가변 문자열 타입으로 정의하였다. Summary는 논문에 따라 아주 긴 문자열이 올 수 있으므로 CLOB 자료형으로 하였다. DOI를 Primary Key(PK)로, 각 논문을 고유하게 식별하는 NUMBER이다. 이때 DOI는 실제 해당 논문의 DOI를 이용하지 않고 임의로 부여하였다. Title, Url, DOI에는 NULL이 올 수 없다. 그 외에 Foreign Key(FK)인 J_number 컬럼을 가진다.

2. REFERENCE relationship -> REFERENCE relation
 참고 관계는 논문 개체와 논문 개체 간의 관계이다. 참고관계는 다대다 관계이므로 관계 릴레이션인 REFERENCE를 정의하였다. REFERENCE 릴레이션은 참고하는 논문(ing_DOI)과 참고되는 논문(ed_DOI) 컬럼을 가지며, 두 컬럼은 Foreign Key(FK)로 PAPER 릴레이션의 PK인 DOI를 참조한다. ing_DOI와 ed_DOI는 함께 이 릴레이션의 PK 역할을 한다.

3. AUTHOR entity -> AUTHOR relation
 저자 개체는 strong entity이므로 저자 릴레이션으로 변환되었다. 저자 개체가 가진 속성은 Name, Institution, Gender, Nation, Address, R_number, Written이다. 이 중 Written은 저자가 쓴 논문의 개수로 논문 개체와의 관계인 WRITE 테이블에서 계산하여 얻을 수 있으므로 릴레이션 컬럼에서 제외하였다. 이때 Written은 실제 해당 저자가 쓴 논문 개수를 이용하지 않고 구축한 DB 내 존재하는 데이터로 부터 얻는 것으로 제한하였다.
 Gender는 'F'혹은 'M' 값을 가지는 char이다. Nation은 국가 코드를 3자리를 입력한다. Address와 Institution은 가변 문자열이고, R_number은 PK로 각 저자를 고유하게 식별하기 위해 부여한 NUMBER이다.

4. MAJOR relationship -> MAJOR relation
 저자 개체와 분야 개체 간 관계인 MAJOR는 다대다 관계로 관계 릴레이션을 정의하여 나타냈다. 컬럼으로 R_number와 DDC를 가지고, R_number은 FK로 저자 릴레이션의 PK인 R_number를 참조하고, DDC는 FK로 분야 릴레이션의 PK인 DDC를 참조한다. R_number와 DDC를 합하여 PK로 한다.

5. WRITE relationship -> WRITE relation
 논문 개체와 저자 개체 간의 관계인 WRITE는 다대다 관계로 관계 릴레이션을 정의하여 나타냈다. WRITE 릴레이션은 논문 릴레이션의 PK인 DOI를 참조하는 외래키 속성 DOI와 저자 릴레이션의 PK인 R_number를 참조하는 외래키 속성 R_number를 가진다. DOI와 R_number 속성을 합하여 PK로 한다.

6. JOURNAL entity -> JOURNAL relation
 저널 개체는 strong entity이므로 저널 릴레이션으로 변환되었다. 저널 개체가 가진 속성은 BookTitle(Name, Vol, Issue), Publisher, J_number, Year 로 composite 속성인 BookTitle의 각 요소들을 각 컬럼으로 나타내고, 그 외 속성은 IN 관계를 위해 분야 릴레이션의 컬럼으로 넣었다. Name, Publisher은 가변문자열 타입이고, Vol, Issue는 정수(NUMBER), Year는 년도를 나타내는 Date형이다. J_number는 PK로 정수형이고 surrogate key이다. 그 외에 FK인 DDC 컬럼을 가진다.

* PUBLISH relationship 
 저널과 논문 간 관계인 PUBLISH는 일대다 관계이므로 N쪽인 논문 릴레이션에 저널 릴레이션의 PK인 J_number를 참조하는 FK 속성 J_number를 두어 관계를 정의하였다.

7. FIELD entity -> FIELD relation
 분야 개체는 strong entity로 분야 릴레이션으로 변환되었다. 속성인 Large, Middle, DDC가 컬럼으로 정의되었으며 DDC는 PK이다. 대분야와 중분야의 조합인 Large, Middle은 DDC마다 다르므로 Unique하다. DDC는 듀이십진분류기호로 100~999사이의 정수이다. Large, Middle은 가변문자열 타입이다.

* IN relationship
 분야와 저널 간 관계인 IN은 일대다 관계이므로 N쪽인 저널 릴레이션에 분야 릴레이션의 PK인 DDC를 참조하는 FK 속성 DDC를 두어 관계를 정의하였다.

8. KEYWORD entity -> KEYWORD relation
 키워드 개체는 strong entity로 키워드 릴레이션으로 변환되었다. 속성인 Sub, K_ID는 컬럼으로 정의하였다. 그 외 속성은 CONTAIN 관계를 위해 분야 릴레이션의 컬럼으로 넣었다. K_ID는 각 키워드를 식별하는 PK로 정수형이고, Sub는 키워드명으로 가변문자열 타입이다. 그 외에 FK인 DDC를 가진다.

* CONTAIN relationship
 분야와 키워드 간 포함 관계는 일대다 관계이므로 N쪽인 키워드 릴레이션에 분야 릴레이션의 PK인 DDC를 참조하는 FK 속성 DDC를 두어 관계를 정의하였다.

9. HAS relationship -> HAS relation
 논문과 키워드 간 관계인 HAS는 다대다 관계이므로 관계 릴레이션 HAS로 나타냈다. HAS 릴레이션은 논문 릴레이션의 PK인 DOI를 참조하는 외래키 DOI와 키워드 릴레이션의 PK인 K_ID를 참조하는 외래키 K_ID를 가진다. DOI와 K_ID를 합하여 PK로 한다. 

10. ACCOUNT entity -> ACCOUNT relation
 계정 개체는 strong entity로 계정 릴레이션으로 변환하였다. 속성 ID, Passwd, Kind는 컬럼으로 정의하였다. 세 컬럼 모두 not null이다. ID와 비밀번호는 가변 문자열이고, Kind는 'U'(user 계정)혹은 'A'(admin 계정)으로 Char형이다. ID는 각 계정을 식별하는 PK이다.

11. K_BOOKMARK relationship -> K_BOOKMARK relation
 계정과 키워드 간 북마크 관계는 다대다 관계이므로 관계 릴레이션 K_BOOKMARK로 나타냈다. 키워드를 북마크한 계정의 ID와 user 계정이 북마크한 키워드를 나타내는 K_ID 컬럼을 가진다. ID는 계정 릴레이션의 PK인 ID를 참조하는 FK이고, K_ID는 키워드 릴레이션의 PK인 K_ID를 참조하는 FK 속성이다. ID와 K_ID를 합하여 PK로 한다.

12. P_BOOKMARK relationship -> P_BOOKMARK relation
 계정과 논문 간 북마크 관계는 다대다 관계이므로 관계 릴레이션 P_BOOKMARK로 나타냈다. 논문을 북마크한 계정의 ID와 user 계정이 북마크한 논문을 나타내는 DOI를 컬럼으로 가진다. ID는 계정 릴레이션의 PK인 ID를 참조하는 FK이고, DOI는 논문 릴레이션의 PK인 DOI를 참조하는 FK 속성이다. ID와 DOI를 합하여 PK로 한다.

13. A_BOOKMARK relationship -> A_BOOKMARK relation
 계정과 저자 간 북마크 관계는 다대다 관계이므로 관계 릴레이션 A_BOOKMARK로 나타냈다. 저자를 북마크한 계정의 ID와 user 계정이 북마크한 저자를 나타내는 R_number를 컬럼으로 가진다. ID는 계정 릴레이션의 PK인 ID를 참조하는 FK이고, R_number는 논문 릴레이션의 PK인 R_number를 참조하는 FK 속성이다. ID와 R_number를 합하여 PK로 한다.

14. POST entity -> POST relation
 게시글 개체는 strong entity로 게시글 릴레이션으로 변환하였다. 속성인 P_No, Category, Title, Date_Time, Views, Contents는 컬럼으로 정의하였다. 그 외 속성은 WIRTE_C 관계를 위해 계정 릴레이션의 컬럼으로 넣었다. P_No는 각 게시글을 고유하게 식별하는 PK로 정수형이다. Category는 'ANN','GNL','QNA' 중 하나를 가지는 문자열이고, Title은 문자열 타입, Views는 정수형, Contents는 긴 글을 쓸수 있도록 CLOB 자료형이다. Date_Time은 게시글을 작성한 날짜와 시간을 저장할 수 있도록 Date 타입이다. View는 조회수로 초기값으로 0을 지정한다. 그 외에 FK인 ID를 가진다.

* WRITE_P relationsihp
 계정과 게시글 간 작성 관계는 일대다 관계이므로 N쪽인 게시글 릴레이션에 계정 릴레이션의 PK인 ID를 참조하는 FK 속성 ID를 두어 관계를 정의하였다.

15. COMMENTS entity -> COMMENTS relation
 댓글 개체는 weak entity이므로 댓글 릴레이션을 만들고 owner인 게시글 릴레이션의 PK를 참조하는 P_No, 계정 릴레이션의 PK를 참조하는 ID를 외래키로 추가하였다. P_No와 ID는 댓글 개체의 partial key인 C_No와 함께 PK 의 역할을 한다. 댓글 개체의 속성인 Contents는 글자수 제한을 두어 문자열 자료형 컬럼으로 정의하였다.

** FIELD 릴레이션의 ddc 정보는 경북대학교 도서관 홈페이지의 분류기호를 참고하여 작성하였으며, ddc를 속성으로 가지는 저널, 키워드, 전공 릴레이션의 ddc 값은 임의로 분류한 것으로 실제 해당 저널, 키워드, 전공이 가지는 값은 아니다. 또한, 저자의 address(email, sns 혹은 홈페이지), nation 중 찾지 못한 것은 임의로 값을 주어 해당 저자의 정확한 이메일, 국적이 아닐 수 있다.